---
name: Container - Kanidm

# This is always built and uploads an OCI image as a build artifact, but only
# pushes to "ghcr.io/kanidm/kanidm:devel" when on "kanidm/kanidm@master".
"on":
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set_tag_values:
    runs-on: ubuntu-latest
    name: Set image tag values
    steps:
      - id: step1
        run: |
          echo "OWNER_LC=${OWNER,,}" >> "${GITHUB_OUTPUT}"
        env:
          OWNER: '${{ github.repository_owner }}'
      - id: step2
        run: |
          echo "REF_NAME=$(echo ${REF_NAME,,} | awk -F/ '{print $1}')" >> "${GITHUB_OUTPUT}"
        env:
          REF_NAME: '${{ github.ref_name }}'
      - id: image_path
        run: |
          echo "IMAGE_PATH="ghcr.io/${OWNER,,}/kanidm" >> "${GITHUB_OUTPUT}"
    outputs:
      owner_lc: ${{ steps.step1.outputs.OWNER_LC }}
      ref_name: ${{ steps.step2.outputs.REF_NAME }}
      image_path: ${{ steps.image_path.outputs.IMAGE_PATH }}
  build:
    name: Build kanidm Docker image
    strategy:
      fail-fast: true
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
            platform_short: amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
            platform_short: arm64
            # https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
    runs-on: ${{matrix.runner}}
    needs:
      - set_tag_values
    steps:
      # - name: Prepare
      #   run: |
      #     platform=${{ matrix.platform }}
      #     echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: v0-rust-linux/${{ matrix.platform_short}}-base
        id: rust-cache
      - name: Inject cache into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "/home/runner/.cargo/registry": "/usr/local/cargo/registry",
              "/home/runner/.cargo/git/db": "/usr/local/cargo/git/db",
              "./target": "/app/target"
            }
      - name: Get Git commit timestamps
        run: echo "GIT_TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - name: Build kanidm
        uses: docker/build-push-action@v6
        id: build
        with:
          platforms: ${{ matrix.platform }}
          tags: ${{ needs.set_tag_values.outputs.image_path}}:devel,${{ needs.set_tag_values.outputs.image_path}}:${{ needs.set_tag_values.outputs.ref_name}}
          build-args: |
            "KANIDM_FEATURES="
          file: tools/Dockerfile
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          outputs: type=image,dest=/tmp/kanidm-docker-${{matrix.platform_short}}.tar
        env:
          SOURCE_DATE_EPOCH: ${{ env.GIT_TIMESTAMP }}
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: kanidm-docker-digests-${{matrix.platform_short}}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kanidm-docker-${{matrix.platform_short}}
          path: /tmp/kanidm-docker-${{matrix.platform_short}}.tar
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
      - set_tag_values
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: kanidm-docker-digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        # https://github.com/docker/login-action/#github-container-registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        # if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ needs.set_tag_values.outputs.image_path}}:devel:devel@sha256:%s ' *)
      # - name: Create manifest list (no push)
      #   working-directory: /tmp/digests
      #   if: ${{ github.ref != 'refs/heads/main' }}
      #   run: |
      #     docker buildx imagetools create --dry-run $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") $(printf '${{ needs.set_tag_values.outputs.image_path}}:devel:devel@sha256:%s ' *)

      # - name: Inspect image
      #   # if: ${{ github.ref == 'refs/heads/main' }}
      #   run: |
      #     docker buildx imagetools inspect ${{ needs.set_tag_values.outputs.image_path}}:devel:${{ steps.meta.outputs.version }}
